/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uv.da.maven.escuela;

import java.io.InputStream;
import java.io.Reader;
import java.math.BigDecimal;
import java.net.URL;
import java.sql.Array;
import java.sql.Blob;
import java.sql.Clob;
import java.sql.Connection;
import java.sql.Date;
import java.sql.NClob;
import java.sql.PreparedStatement;
import java.sql.Ref;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.RowId;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.SQLXML;
import java.sql.Statement;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.Calendar;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.postgresql.core.Query;

/**
 *
 * @author asisr
 */
public class ListaEstudiantes extends javax.swing.JFrame {

    /**
     * Creates new form ListaEstudiantes
     */
    public ListaEstudiantes() {
        initComponents();
        ConsultarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_Estudiantes = new javax.swing.JTable();
        btn_Eliminar = new javax.swing.JButton();
        btn_RegresarMenu = new javax.swing.JButton();
        btn_Modificar = new javax.swing.JButton();
        btn_actualizarTabla = new javax.swing.JButton();
        btn_RegistrarNuevoLista = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbl_Estudiantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id Estudiante", "Primer Nombre", "Segundo Nombre", "Primer Apellido", "Segundo Apellido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_Estudiantes);

        btn_Eliminar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_Eliminar.setText("Eliminar");
        btn_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EliminarActionPerformed(evt);
            }
        });

        btn_RegresarMenu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_RegresarMenu.setText("Regresar");
        btn_RegresarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RegresarMenuActionPerformed(evt);
            }
        });

        btn_Modificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_Modificar.setText("Modificar");
        btn_Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ModificarActionPerformed(evt);
            }
        });

        btn_actualizarTabla.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_actualizarTabla.setText("Actualizar Tabla");
        btn_actualizarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarTablaActionPerformed(evt);
            }
        });

        btn_RegistrarNuevoLista.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_RegistrarNuevoLista.setText("Registrar nuevo estudiante");
        btn_RegistrarNuevoLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RegistrarNuevoListaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(69, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_actualizarTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(btn_Eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(btn_Modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(btn_RegresarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_RegistrarNuevoLista))
                .addGap(62, 62, 62))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btn_RegistrarNuevoLista)
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Eliminar)
                    .addComponent(btn_Modificar)
                    .addComponent(btn_RegresarMenu)
                    .addComponent(btn_actualizarTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_actualizarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarTablaActionPerformed
        try {
            DBConnection conn = new DBConnection();
            Statement stat = conn.connect().createStatement();
            ResultSet rs;
            rs = stat.executeQuery("SELECT idestudiante, primer_nom, seg_nom, primer_ape, seg_ape FROM estudiante WHERE activo = true;");
            ResultSetMetaData md = rs.getMetaData();
            int columnCount = md.getColumnCount();
            Vector columns = new Vector(columnCount);

            //store column names
            for (int i = 1; i <= columnCount; i++) {
                columns.add(md.getColumnName(i));
            }

            Vector data = new Vector();
            Vector row;

            while (rs.next()) {

                row = new Vector(columnCount);
                for (int i = 1; i <= columnCount; i++) {
                    row.add(rs.getString(i));
                }
                data.add(row);

                //Debugging
                System.out.println("Primer Nombre = " + rs.getString("primer_nom"));
                System.out.println("Primer Apellido = " + rs.getString("primer_ape"));
            }

            //Display in JTable
            DefaultTableModel tableModel = new DefaultTableModel(data, columns);
            tbl_Estudiantes.setModel(tableModel);

            rs.close();
            conn.connect().close();
        } catch (SQLException sqle) {
            sqle.printStackTrace();
        }
    }//GEN-LAST:event_btn_actualizarTablaActionPerformed

    private void btn_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EliminarActionPerformed
        
        
        int row = tbl_Estudiantes.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tbl_Estudiantes.getModel();

        String selected = model.getValueAt(row, 0).toString();

        if (row >= 0) {

            model.removeRow(row);

            try {
                DBConnection conn = new DBConnection();
                PreparedStatement ps = conn.connect().prepareStatement("UPDATE estudiante SET activo = false WHERE idestudiante = "+selected);
                ps.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error de conexión");
            }
        }
    }//GEN-LAST:event_btn_EliminarActionPerformed

    private void btn_RegresarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RegresarMenuActionPerformed
        super.dispose();
    }//GEN-LAST:event_btn_RegresarMenuActionPerformed

    private void btn_ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ModificarActionPerformed
        int row = tbl_Estudiantes.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tbl_Estudiantes.getModel();

        String selected = model.getValueAt(row, 0).toString();
        String primerNombre = model.getValueAt(row, 1).toString();
        String segundoNombre = model.getValueAt(row, 2).toString();
        String primerApellido = model.getValueAt(row, 3).toString();
        String segundoApellido = model.getValueAt(row, 4).toString();

        if (row >= 0) {

            try {
                DBConnection conn = new DBConnection();
                PreparedStatement ps = conn.connect().prepareStatement("UPDATE estudiante SET primer_nom = '"+ primerNombre + "', seg_nom = '" + segundoNombre + "',"
                        + " primer_ape = '" + primerApellido + "', seg_ape = '" + segundoApellido + "', activo = true WHERE idestudiante = "+selected);
                ps.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error de conexión");
            }
        }
    }//GEN-LAST:event_btn_ModificarActionPerformed

    private void btn_RegistrarNuevoListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RegistrarNuevoListaActionPerformed
        MainWindow registro = new MainWindow();
        registro.setVisible(true);
    }//GEN-LAST:event_btn_RegistrarNuevoListaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListaEstudiantes lista = new ListaEstudiantes();
                lista.setVisible(true);

            }
        });
    }
    
    public void ConsultarTabla () {
    try {
            DBConnection conn = new DBConnection();
            Statement stat = conn.connect().createStatement();
            ResultSet rs;
            rs = stat.executeQuery("SELECT idestudiante, primer_nom, seg_nom, primer_ape, seg_ape FROM estudiante WHERE activo = true;");
            ResultSetMetaData md = rs.getMetaData();
            int columnCount = md.getColumnCount();
            Vector columns = new Vector(columnCount);

            //store column names
            for (int i = 1; i <= columnCount; i++) {
                columns.add(md.getColumnName(i));
            }

            Vector data = new Vector();
            Vector row;

            while (rs.next()) {

                row = new Vector(columnCount);
                for (int i = 1; i <= columnCount; i++) {
                    row.add(rs.getString(i));
                }
                data.add(row);

                //Debugging
                System.out.println("Primer Nombre = " + rs.getString("primer_nom"));
                System.out.println("Primer Apellido = " + rs.getString("primer_ape"));
            }

            //Display in JTable
            DefaultTableModel tableModel = new DefaultTableModel(data, columns);
            tbl_Estudiantes.setModel(tableModel);

            rs.close();
            conn.connect().close();
        } catch (SQLException sqle) {
            sqle.printStackTrace();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Eliminar;
    private javax.swing.JButton btn_Modificar;
    private javax.swing.JButton btn_RegistrarNuevoLista;
    private javax.swing.JButton btn_RegresarMenu;
    private javax.swing.JButton btn_actualizarTabla;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_Estudiantes;
    // End of variables declaration//GEN-END:variables
}
